{"version":3,"sources":["../../../src/redux/reducers/index.js"],"names":["reduxNodes","require","lokiNodes","reducer","backend","process","env","GATSBY_DB_NODES","getNodesReducer","nodesReducer","Error","module","exports","program","nodes","nodesByType","nodesTouched","lastAction","plugins","flattenedPlugins","apiToPlugins","config","pages","schema","status","componentDataDependencies","components","staticQueryComponents","jobs","webpack","redirects","babelrc","jsonDataPaths","thirdPartySchemas","themes"],"mappings":";;AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAE,SAAF,CAA1B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAE,qBAAF,CAAP,CAA+BE,OAAjD;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAAZ,IAAgC,OAAhD;;AAEA,SAASC,eAAT,GAA2B;AACzB,MAAIC,YAAJ;;AACA,UAAQL,OAAR;AACE,SAAM,OAAN;AACEK,MAAAA,YAAY,GAAGT,UAAf;AACA;;AACF,SAAM,MAAN;AACES,MAAAA,YAAY,GAAGP,SAAf;AACA;;AACF;AACE,YAAM,IAAIQ,KAAJ,CACH,iEADG,CAAN;AARJ;;AAYA,SAAOD,YAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,OAAO,EAAEZ,OAAO,CAAE,WAAF,CADD;AAEfa,EAAAA,KAAK,EAAEN,eAAe,EAFP;AAGfO,EAAAA,WAAW,EAAEd,OAAO,CAAE,iBAAF,CAHL;AAIfe,EAAAA,YAAY,EAAEf,OAAO,CAAE,iBAAF,CAJN;AAKfgB,EAAAA,UAAU,EAAEhB,OAAO,CAAE,eAAF,CALJ;AAMfiB,EAAAA,OAAO,EAAEjB,OAAO,CAAE,WAAF,CAND;AAOfkB,EAAAA,gBAAgB,EAAElB,OAAO,CAAE,qBAAF,CAPV;AAQfmB,EAAAA,YAAY,EAAEnB,OAAO,CAAE,kBAAF,CARN;AASfoB,EAAAA,MAAM,EAAEpB,OAAO,CAAE,UAAF,CATA;AAUfqB,EAAAA,KAAK,EAAErB,OAAO,CAAE,SAAF,CAVC;AAWfsB,EAAAA,MAAM,EAAEtB,OAAO,CAAE,UAAF,CAXA;AAYfuB,EAAAA,MAAM,EAAEvB,OAAO,CAAE,UAAF,CAZA;AAafwB,EAAAA,yBAAyB,EAAExB,OAAO,CAAE,+BAAF,CAbnB;AAcfyB,EAAAA,UAAU,EAAEzB,OAAO,CAAE,cAAF,CAdJ;AAef0B,EAAAA,qBAAqB,EAAE1B,OAAO,CAAE,2BAAF,CAff;AAgBf2B,EAAAA,IAAI,EAAE3B,OAAO,CAAE,QAAF,CAhBE;AAiBf4B,EAAAA,OAAO,EAAE5B,OAAO,CAAE,WAAF,CAjBD;AAkBf6B,EAAAA,SAAS,EAAE7B,OAAO,CAAE,aAAF,CAlBH;AAmBf8B,EAAAA,OAAO,EAAE9B,OAAO,CAAE,WAAF,CAnBD;AAoBf+B,EAAAA,aAAa,EAAE/B,OAAO,CAAE,mBAAF,CApBP;AAqBfgC,EAAAA,iBAAiB,EAAEhC,OAAO,CAAE,qBAAF,CArBX;AAsBfiC,EAAAA,MAAM,EAAEjC,OAAO,CAAE,UAAF;AAtBA,CAAjB","sourcesContent":["const reduxNodes = require(`./nodes`)\nconst lokiNodes = require(`../../db/loki/nodes`).reducer\n\nconst backend = process.env.GATSBY_DB_NODES || `redux`\n\nfunction getNodesReducer() {\n  let nodesReducer\n  switch (backend) {\n    case `redux`:\n      nodesReducer = reduxNodes\n      break\n    case `loki`:\n      nodesReducer = lokiNodes\n      break\n    default:\n      throw new Error(\n        `Unsupported DB nodes backend (value of env var GATSBY_DB_NODES)`\n      )\n  }\n  return nodesReducer\n}\n\nmodule.exports = {\n  program: require(`./program`),\n  nodes: getNodesReducer(),\n  nodesByType: require(`./nodes-by-type`),\n  nodesTouched: require(`./nodes-touched`),\n  lastAction: require(`./last-action`),\n  plugins: require(`./plugins`),\n  flattenedPlugins: require(`./flattened-plugins`),\n  apiToPlugins: require(`./api-to-plugins`),\n  config: require(`./config`),\n  pages: require(`./pages`),\n  schema: require(`./schema`),\n  status: require(`./status`),\n  componentDataDependencies: require(`./component-data-dependencies`),\n  components: require(`./components`),\n  staticQueryComponents: require(`./static-query-components`),\n  jobs: require(`./jobs`),\n  webpack: require(`./webpack`),\n  redirects: require(`./redirects`),\n  babelrc: require(`./babelrc`),\n  jsonDataPaths: require(`./json-data-paths`),\n  thirdPartySchemas: require(`./thirdPartySchemas`),\n  themes: require(`./themes`),\n}\n"],"file":"index.js"}